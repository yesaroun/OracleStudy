SELECT USER
FROM DUAL;
--==>> HR


--○ 세 개 이상의 테이블 조인(JOIN)

-- 형식 1. (SQL 1992 CODE)
SELECT 테이블명1.컬럼명, 테이블명2.컬럼명, 테이블명3.컬럼명
FROM 테이블명1, 테이블명2, 테이블명3
WHERE 테이블명1.컬럼명1 = 테이블명2.컬럼명1
  AND 테이블명2.컬럼명2 = 테이블명3.컬럼명2;


-- 형식 2. (SQL 1999 CODE)
SELECT 테이블명1.컬럼명, 테이블명2.컬럼명, 테이블명3.컬럼명
FROM 테이블명1 JOIN 테이블명2
ON 테이블명1.컬럼명1 = 테이블명2.컬럼명2;
                JOIN 테이블명3
                ON 테이블명2.컬럼명2 = 테이블명3.컬럼명2;


--○ HR 계정 소유의 테이블 또는 뷰 목록 조회
SELECT *
FROM TAB;
--==>>
/*
COUNTRIES	        TABLE	
DEPARTMENTS	        TABLE	
EMPLOYEES	        TABLE	
EMP_DETAILS_VIEW	VIEW	
JOBS	            TABLE	
JOB_HISTORY	        TABLE	
LOCATIONS	        TABLE	
REGIONS	            TABLE	
*/

--○ HR.JOBS, HR.EMPLOYEES, HR.DEPARTMENTS 테이블을 대상으로 직원들의 데이터를
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME 항목으로 조회한다.
--  -----------  ---------  ---------  ---------------
--  EMPLOYEES    EMPLOYEES  JOBS        DEPARTMENTS


-- 내 풀이
SELECT E.FIRST_NAME "이름", E.LAST_NAME "성"
     , J.JOB_TITLE "직업명", D.DEPARTMENT_NAME "부서명"
FROM JOBS J LEFT JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID
            RIGHT JOIN DEPARTMENTS D
            ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 풀이
SELECT *
FROM DEPARTMENTS;
-- DEPARTMENT_ID        -- 관계 컬럼
SELECT *
FROM EMPLOYEES;
-- JOB_ID               -- 관계 컬럼
SELECT *
FROM JOBS;

SELECT E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT COUNT(*)
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
--==>> 106 (행이 몇개인지 확인하는거임)

SELECT COUNT(*)
FROM EMPLOYEES;
--==>> 107 (즉 OUTTER JOIN 해야하는거임)

SELECT COUNT(*)
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
--==>> 107 (한명이 부서가 없어서 누락된거임)

SELECT COUNT(*)
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        JOIN JOBS J
        ON E.JOB_ID = J.JOB_ID;
--==>> 107 (누락없이 완성했는지 확인)

SELECT E.FIRST_NAME, E.LAST_NAME, JOB_TITLE, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        JOIN JOBS J
        ON E.JOB_ID = J.JOB_ID;
        

--○ EMPLOYEES, DEPARTMENTS, JOBS, LOCATIONS, COUNTRIES, REGIONS 테이블을 대상으로
--   직원들의 데이터를 다음과 같이 조회할 수 있도록 쿼리문을 구성한다.
--   FIRST_NAME, LAST_NAME, JOB_TITLE, DEPARTMENT_NAME, CITY, COUNTRY_NAME, REGION_NAME

SELECT EM.FIRST_NAME, EM.LAST_NAME, JO.JOB_TITLE, DE.DEPARTMENT_NAME
     , LO.CITY, CO.COUNTRY_NAME, RE.REGION_NAME
FROM EMPLOYEES EM LEFT JOIN DEPARTMENTS DE
ON EM.DEPARTMENT_ID = DE.DEPARTMENT_ID
        JOIN JOBS JO
        ON EM.JOB_ID = JO.JOB_ID
        LEFT JOIN LOCATIONS LO
        ON DE.LOCATION_ID = LO.LOCATION_ID
        LEFT JOIN COUNTRIES CO
        ON LO.COUNTRY_ID = CO.COUNTRY_ID
        LEFT JOIN REGIONS RE
        ON CO.REGION_ID = RE.REGION_ID;
     
SELECT EM.FIRST_NAME, EM.LAST_NAME, JO.JOB_TITLE, DE.DEPARTMENT_NAME
     , LO.CITY, CO.COUNTRY_NAME, RE.REGION_NAME
FROM EMPLOYEES EM, DEPARTMENTS DE, JOBS JO, LOCATIONS LO, COUNTRIES CO, REGIONS RE
WHERE EM.DEPARTMENT_ID = DE.DEPARTMENT_ID(+)
  AND EM.JOB_ID = JO.JOB_ID
  AND DE.LOCATION_ID = LO.LOCATION_ID(+)
  AND LO.COUNTRY_ID = CO.COUNTRY_ID(+)
  AND CO.REGION_ID = RE.REGION_ID(+);
            
  





