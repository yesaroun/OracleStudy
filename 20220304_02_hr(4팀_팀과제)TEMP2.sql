DROP TABLE DEPARTMENTS4 CASCADE CONSTRAINTS;


SELECT *
FROM TABS;

SELECT USER
FROM DUAL;

--■■■ 팀 별 실습 수행 과제 ■■■--
-- (20220304_02_hr(1팀_팀과제).sql)

-- HR 샘플 스키마 ERD 를 이용한 테이블 재구성~!!!

-- 팀별로... HR 스키마에 있는 기본 테이블(7개)
-- COUNTRIES / DEPARTMENTS / EMPLOYEES / JOB_HISTORY / JOBS / LOCATIONS / REGIONS
-- 을 똑~~~~~~~~같이 새로 구성한다. 

-- 단, 생성하는 테이블 이름은 『테이블명 + 팀번호』
-- COUNTRIES4 / DEPARTMENTS4 / EMPLOYEES4 / JOB_HISTORY4 / JOBS4 / LOCATIONS4 / REGIONS4
-- 와 같이 구성한다.

-- 1. 기존 대상 테이블들의 정보 수집
-- 2. 테이블 생성(컬럼이름, 자료형, DEFAULT 표현식, NOT NULL 등 ...)
-- 3. 제약조건 설정(PK, UK, FK, CK, ...)
-- 4. 작성 후 데이터 입력

-- 제출 항목
--  - 20220304_04_hr(4팀_팀과제).sql
--  - 20220304_04_hr(4팀_팀과제) 수행후기.txt


-- REGIONS4 ------------------------------------------------------------

-- REGIONS4 테이블 생성 0
CREATE TABLE REGIONS4
( REGION_ID NUMBER
, REGION_NAME VARCHAR2(25)
);

-- REGIONS4 제약조건 추가
ALTER TABLE REGIONS4
ADD (CONSTRAINT REGIONS4_REGION_ID_PK PRIMARY KEY(REGION_ID)
    , CONSTRAINT REGIONS4_REGION_NAME_NN CHECK("REGION_NAME" IS NOT NULL));


-- REGIONS4 데이터 입력
INSERT INTO REGIONS4(REGION_ID, REGION_NAME) VALUES(1,'Europe');
INSERT INTO REGIONS4(REGION_ID, REGION_NAME) VALUES(2,'Americas');
INSERT INTO REGIONS4(REGION_ID, REGION_NAME) VALUES(3,'Asia');
INSERT INTO REGIONS4(REGION_ID, REGION_NAME) VALUES(4,'Middle East and Africa');

--------------------------------------------------------------------------------


-- CONTRIEST4 ----------------------------------------------------------

--테이블 생성        
CREATE TABLE COUNTRIES4(
COUNTRY_ID       CHAR(2)            
,REGION_ID       NUMBER              
,COUNTRY_NAME    VARCHAR2(40)
,CONSTRAINT COUNTRY4_ID_PK PRIMARY KEY(COUNTRY_ID)
,CONSTRAINT COUNTRY4_ID_NN  CHECK(COUNTRY_ID IS NOT NULL)
,CONSTRAINT COUNTRY4_REG_FK FOREIGN KEY(REGION_ID)
            REFERENCES REGIONS4(REGION_ID)
);


--데이터 입력
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('AR',2,'Argentina');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('AU',3,'Australia');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('BE',1,'Belgium');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('BR',2,'Brazil');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('CA',2,'Canada');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('CH',1,'Switzerland');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('CN',3,'China');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('DE',1,'Germany');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('DK',1,'Denmark');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('EG',4,'Egypt');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('FR',1,'France');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('IL',4,'Israel');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('IN',3,'India');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('IT',1,'Italy');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('JP',3,'Japan');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('KW',4,'Kuwait');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('ML',3,'Malaysia');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('MX',2,'Mexico');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('NG',4,'Nigeria');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('NL',1,'Netherlands');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('SG',3,'Singapore');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('UK',1,'United Kingdom');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('US',2,'United States of America');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('ZM',4,'Zambia');
INSERT INTO COUNTRIES4(COUNTRY_ID,REGION_ID,COUNTRY_NAME)VALUES('ZW',4,'Zimbabwe');


--------------------------------------------------------------------------------


-- LOCATIONS4 ----------------------------------------------------------

-- 테이블 생성 - COUNTRIES4의 COUNTRY_ID 컬럼을 참조하고 있다.
CREATE TABLE LOCATIONS4
(LOCATION_ID            NUMBER(4)   --4자리
,STREET_ADDRESS         VARCHAR(40) -- 50 Byte 가변 문자 (A = 1 Byte)
,POSTAL_CODE            VARCHAR(12) -- 12 Byte 가변 문자
,CITY                   VARCHAR(30) CONSTRAINT LOC4_LOC_CITY_NN NOT NULL
,STATE_PROVINCE         VARCHAR(25) -- 30 Byte 가변 문자
,COUNTRY_ID             CHAR(2)     -- 2 Byte 고정문자
,CONSTRAINT LOC4_LOC_ID_PK PRIMARY KEY(LOCATION_ID)
);


--★★★제약조건 COUNTRIES4 참조(외래)★★★
ALTER TABLE LOCATIONS4
ADD(
 CONSTRAINT LOC4_C_ID_FK FOREIGN KEY(COUNTRY_ID) REFERENCES COUNTRIES4(COUNTRY_ID)
); 


-- 데이터 추가
INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1000,'1297 Via Cola di Rie','00989','Roma',NULL,'IT'); 

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1100,'93091 Calle della Testa','10934','Venice',NULL,'IT');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1200,'2017 Shinjuku-ku','1689','Tokyo','Tokyo Prefecture','JP');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1300,'9450 Kamiya-cho','6823','Hiroshima',NULL,'JP');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1400,'2014 Jabberwocky Rd','26192','Southlake','Texas','US');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1500,'2011 Interiors Blvd','99236','South San Francisco','California','US');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1600,'2007 Zagora St','50090','South Brunswick','New Jersey','US');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1700,'2004 Charade Rd','98199','Seattle','Washington','US');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1800,'147 Spadina Ave','M5V 2L7','Toronto','Ontario','CA');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(1900,'6092 Boxwood St','YSW 9T2','Whitehorse','Yukon','CA');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2000,'40-5-12 Laogianggen','190518','Beijing',NULL,'CN');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2100,'1298 Vileparle (E)','490231','Bombay','Maharashtra','IN');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2200,'12-98 Victoria Street','2901','Sydney','New South Wales','AU');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2300,'198 Clementi North','540198','Singapore',NULL,'SG');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2400,'8204 Arthur St',NULL,'London',NULL,'UK');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2500,'Magdalen Centre, The Oxford Science Park','OX9 9ZB','Oxford','Oxford','UK');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2600,'9702 Chester Road','09629850293','Stretford','Manchester','UK');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2700,'Schwanthalerstr. 7031','80925','Munich','Bavaria','DE');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2800,'Rua Frei Caneca 1360','01307-002','Sao Paulo','Sao Paulo','BR');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(2900,'20 Rue des Corps-Saints','1730','Geneva','Geneve','CH');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(3000,'Murtenstrasse 921','3095','Bern','BE','CH');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(3100,'Pieter Breughelstraat 837','3029SK','Utrecht','Utrecht','NL');

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) 
VALUES(3200,'Mariano Escobedo 9991','11932','Mexico City','Distrito Federal,','MX');

--------------------------------------------------------------------------------


-- DEPARTMENTS4 ------------------------------------------------------

CREATE TABLE DEPARTMENTS4(
    DEPARTMENT_ID   NUMBER(4)              CONSTRAINT DEPT4_ID_PK PRIMARY KEY
,   DEPARTMENT_NAME VARCHAR2(30)    CONSTRAINT DEPT4_NAME_NN NOT NULL
,   MANAGER_ID      NUMBER(6)       
,   LOCATION_ID     NUMBER(4)       
);
--==>> Table DEPARTMENTS4이(가) 생성되었습니다.

---여기까지

-- 데이터 입력
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(10, 'Administration', 200, 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(20, 'Marketing', 201, 1800);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(30, 'Purchasing', 114, 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(40, 'Human Resources', 203, 2400);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(50, 'Shipping', 121, 1500);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(60, 'IT', 103, 1400);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(70, 'Public Relations', 204, 2700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(80, 'Sales', 145, 2500);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(90, 'Executive', 100, 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(100, 'Finance', 108, 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
       VALUES(110, 'Accounting', 205, 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(120, 'Treasury', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(130, 'Corporate Tax', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(140, 'Control And Credit', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(150, 'Shareholder Services', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(160, 'Benefits', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(170, 'Manufacturing', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(180, 'Construction', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(190, 'Contracting', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(200, 'Operations', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(210, 'IT Support', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(220, 'NOC', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(230, 'IT Helpdesk', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(240, 'Government Sales', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(250, 'Retail Sales', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(260, 'Recruiting', 1700);
INSERT INTO DEPARTMENTS4(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
       VALUES(270, 'Payroll', 1700);


-- 추후에 FOREIGN KEY 지정하기
ALTER TABLE DEPARTMENTS4 
ADD CONSTRAINT DEPT4_LOC_FK FOREIGN KEY(LOCATION_ID) REFERENCES LOCATIONS4(LOCATION_ID); 

ALTER TABLE DEPARTMENTS4 
ADD CONSTRAINT DEPT4_MGR_FK FOREIGN KEY(MANAGER_ID) REFERENCES EMPLOYEES4(EMPLOYEE_ID); 


SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS';

-- 확인
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS4';
/*
원본
HR   DEPT_NAME_NN   DEPARTMENTS   C   DEPARTMENT_NAME   "DEPARTMENT_NAME" IS NOT NULL   
HR   DEPT_ID_PK   DEPARTMENTS   P   DEPARTMENT_ID      
HR   DEPT_LOC_FK   DEPARTMENTS   R   LOCATION_ID      NO ACTION
HR   DEPT_MGR_FK   DEPARTMENTS   R   MANAGER_ID      NO ACTION

FOREIGN KEY 추가 전
HR   DEPT_NAME_NN4   DEPARTMENTS4   C   DEPARTMENT_NAME   "DEPARTMENT_NAME" IS NOT NULL   
HR   DEPT_ID_PK4   DEPARTMENTS4   P   DEPARTMENT_ID      
*/

SELECT *
FROM DEPARTMENTS4;

--------------------------------------------------------------------------------


-- EMPLOYEES ----------------------------------------------------------------------------------------------
SELECT *
FROM EMPLOYEES;

DESC EMPLOYEES;
--==>>
/*
이름                      널?       유형           
-------------- -------- ------------ 
EMPLOYEE_ID    NOT NULL NUMBER(6)    
FIRST_NAME              VARCHAR2(20) 
LAST_NAME      NOT NULL VARCHAR2(25) 
EMAIL               NOT NULL VARCHAR2(25) 
PHONE_NUMBER            VARCHAR2(20) 
HIRE_DATE      NOT NULL DATE         
JOB_ID              NOT NULL VARCHAR2(10) 
SALARY                  NUMBER(8,2)  
COMMISSION_PCT          NUMBER(2,2)  
MANAGER_ID              NUMBER(6)    
DEPARTMENT_ID           NUMBER(4) 
*/

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES';
--==>>
/*
HR   EMP_LAST_NAME_NN   EMPLOYEES       C   LAST_NAME       "LAST_NAME" IS NOT NULL   
HR   EMP_EMAIL_NN           EMPLOYEES       C   EMAIL               "EMAIL" IS NOT NULL   
HR   EMP_HIRE_DATE_NN   EMPLOYEES       C   HIRE_DATE       "HIRE_DATE" IS NOT NULL   
HR   EMP_JOB_NN               EMPLOYEES       C   JOB_ID               "JOB_ID" IS NOT NULL   
HR   EMP_SALARY_MIN       EMPLOYEES       C   SALARY           salary > 0   
HR   EMP_EMAIL_UK           EMPLOYEES       U   EMAIL      
HR   EMP_EMP_ID_PK           EMPLOYEES       P   EMPLOYEE_ID      
HR   EMP_DEPT_FK               EMPLOYEES       R   DEPARTMENT_ID                                              NO ACTION
HR   EMP_JOB_FK                   EMPLOYEES       R   JOB_ID                                                              NO ACTION
HR   EMP_MANAGER_FK       EMPLOYEES       R   MANAGER_ID                                                  NO ACTION
*/

CREATE TABLE EMPLOYEES4
( EMPLOYEE_ID           NUMBER(6)
, FIRST_NAME             VARCHAR2(20)
, LAST_NAME              VARCHAR2(25)       NOT NULL
, EMAIL                       VARCHAR2(25)       NOT NULL
, PHONE_NUMBER       VARCHAR2(20)
, HIRE_DATE                DATE                      NOT NULL
, JOB_ID                      VARCHAR2(10)        NOT NULL
, SALARY                    NUMBER(8, 2)
, COMMISSION_PCT    NUMBER(2, 2)
, MANAGER_ID            NUMBER(6)
, DEPARTMENT_ID      NUMBER(4)
);
--==>> Table EMPLOYEES4이(가) 생성되었습니다.

-- 제약조건 추가 (NOT NULL FOREIGN KEY 빼고)
ALTER TABLE EMPLOYEES4
ADD (CONSTRAINT EMP4_SALARY_MIN CHECK(SALARY > 0)
        , CONSTRAINT EMP4_EMAIL_UK UNIQUE(EMAIL)
        , CONSTRAINT EMP4_EMP_ID_PK PRIMARY KEY(EMPLOYEE_ID));
--==>> Table EMPLOYEES4이(가) 변경되었습니다.

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES4';

-- 제약조건 이름 변경
ALTER TABLE EMPLOYEES4
RENAME CONSTRAINT SYS_C007079 TO EMP4_LAST_NAME_NN;

ALTER TABLE EMPLOYEES4
RENAME CONSTRAINT SYS_C007080 TO EMP4_EMAIL_NN;

ALTER TABLE EMPLOYEES4
RENAME CONSTRAINT SYS_C007081 TO EMP4_HIRE_DATE_NN;

ALTER TABLE EMPLOYEES4
RENAME CONSTRAINT SYS_C007082 TO EMP4_JOB_ID_NN;

-- 제약조건 FOREIGN KEY 추가
ALTER TABLE EMPLOYEES4
ADD 
(
         CONSTRAINT EMP4_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)    REFERENCES DEPARTMENTS4
       , CONSTRAINT EMP4_JOB_FK FOREIGN KEY(JOB_ID)   REFERENCES JOBS4
       , CONSTRAINT EMP4_MANAGER_FK FOREIGN KEY(MANAGER_ID)     REFERENCES EMPLOYEES4(EMPLOYEE_ID)
);

SELECT *
FROM EMPLOYEES4;

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';
                                                                 
INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(100,'Steven','King','SKING','515.123.4567','2003-06-17 00:00:00','AD_PRES', 24000 ,NULL,NULL,90);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(101,'Neena','Kochhar','NKOCHHAR','515.123.4568','2005-09-21 00:00:00','AD_VP',17000,NULL,100,90);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(102,'Lex','De Haan','LDEHAAN','515.123.4569','2001-01-13 00:00:00','AD_VP',17000,NULL,100,90);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(103,   'Alexander','Hunold','AHUNOLD','590.423.4567','2006-01-03 00:00:00','IT_PROG',9000,NULL,102,60);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(104,   'Bruce'   ,'Ernst','BERNST','590.423.4568','2007-05-21 00:00:00','IT_PROG',6000,NULL,103,60);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(105,   'David','Austin','DAUSTIN','590.423.4569','2005-06-25 00:00:00', 'IT_PROG',4800,NULL,103,60);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(106,   'Valli','Pataballa','VPATABAL','590.423.4560','2006-02-05 00:00:00','IT_PROG',4800,NULL,103,60);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(107,   'Diana','Lorentz','DLORENTZ','590.423.5567','2007-02-07 00:00:00','IT_PROG',4200,NULL,103,60);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(108,   'Nancy','Greenberg','NGREENBE','515.124.4569','2002-08-17 00:00:00','   FI_MGR',12008,NULL,101,100);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(109,   'Daniel','Faviet','DFAVIET','515.124.4169','2002-08-16 00:00:00','FI_ACCOUNT',9000,NULL,108,100);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(110,   'John','   Chen','JCHEN','515.124.4269','2005-09-28 00:00:00','FI_ACCOUNT',8200,   NULL,108,100);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(111,'Ismael','Sciarra','ISCIARRA','515.124.4369','2005-09-30 00:00:00','FI_ACCOUNT',7700,   NULL,108,100);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(112,   'Jose Manuel','Urman','JMURMAN','515.124.4469','2006-03-07 00:00:00','FI_ACCOUNT',7800,NULL,108,100);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(113,   'Luis','   Popp','LPOPP','515.124.4567','2007-12-07 00:00:00','FI_ACCOUNT',6900,NULL,108,100);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(114,   'Den','Raphaely','DRAPHEAL','515.127.4561','2002-12-07 00:00:00','PU_MAN',11000,NULL,   100,30);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(115,'Alexander','Khoo','AKHOO','515.127.4562','2003-05-18 00:00:00   ','PU_CLERK',3100,NULL,114,30);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(116,'Shelli','Baida','SBAIDA','515.127.4563','2005-12-24 00:00:00','PU_CLERK',2900,NULL,114,30);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(117,'Sigal','Tobias','STOBIAS','515.127.4564','2005-07-24 00:00:00','PU_CLERK',2800,NULL,114,30);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(118,'Guy','Himuro','GHIMURO','515.127.4565','2006-11-15 00:00:00','PU_CLERK',2600,NULL,114,30);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(119,'Karen','   Colmenares','KCOLMENA','515.127.4566','2007-08-10 00:00:00','PU_CLERK',2500,NULL,   114,30);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(120,'   Matthew','Weiss','MWEISS','650.123.1234','2004-07-18 00:00:00','ST_MAN',8000,NULL,100,50);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(121,'Adam   ','Fripp','AFRIPP','650.123.2234','2005-04-10 00:00:00','ST_MAN',8200,NULL,100,50);

INSERT INTO EMPLOYEES4 (EMPLOYEE_ID , FIRST_NAME , LAST_NAME , EMAIL , PHONE_NUMBER 
, HIRE_DATE , JOB_ID , SALARY , COMMISSION_PCT , MANAGER_ID , DEPARTMENT_ID) 
VALUES(122,'Payam','Kaufling','PKAUFLIN','650.123.3234','2003-05-01 00:00:00','ST_MAN',7900,NULL,100,50);

SELECT *
FROM EMPLOYEES4;



-- JOBS -----------------------------------------------------------------

SELECT *
FROM JOBS;
--==>>
/*
AD_PRES           President   20080   40000
AD_VP               Administration Vice President   15000   30000
AD_ASST           Administration Assistant   3000   6000
FI_MGR               Finance Manager   8200   16000
FI_ACCOUNT       Accountant   4200   9000
AC_MGR           Accounting Manager   8200   16000
AC_ACCOUNT   Public Accountant   4200   9000
SA_MAN           Sales Manager   10000   20080
SA_REP           Sales Representative   6000   12008
PU_MAN           Purchasing Manager   8000   15000
PU_CLERK       Purchasing Clerk   2500   5500
ST_MAN           Stock Manager   5500   8500
ST_CLERK       Stock Clerk   2008   5000
SH_CLERK       Shipping Clerk   2500   5500
IT_PROG           Programmer   4000   10000
MK_MAN           Marketing Manager   9000   15000
MK_REP           Marketing Representative   4000   9000
HR_REP           Human Resources Representative   4000   9000
PR_REP           Public Relations Representative   4500   10500
*/

DESC JOBS;
--==>>
/*
이름              널?              유형           
----------   --------     ------------ 
JOB_ID          NOT NULL   VARCHAR2(10) 
JOB_TITLE     NOT NULL   VARCHAR2(35) 
MIN_SALARY                   NUMBER(6)    
MAX_SALARY                  NUMBER(6)   
*/

-- 제약조건 확인 (조회)
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOBS';
--==>>
/*
HR   JOB_TITLE_NN   JOBS       C   JOB_TITLE   "JOB_TITLE" IS NOT NULL   
HR   JOB_ID_PK   JOBS           P   JOB_ID      
*/

-- JOBS4 테이블 생성
CREATE TABLE JOBS4
( JOB_ID            VARCHAR2(10)        
, JOB_TITLE       VARCHAR2(35)
, MIN_SALARY  NUMBER(6)
, MAX_SALARY NUMBER(6)
);
--==>> Table JOBS4이(가) 생성되었습니다.

DESC JOBS4;

-- 제약조건 추가
ALTER TABLE JOBS4
ADD CONSTRAINT JOB4_ID_PK PRIMARY KEY(JOB_ID);

ALTER TABLE JOBS4
MODIFY JOB_TITLE NOT NULL;
        
-- 제약조건 확인
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOBS4';
--==>>
/*
HR   JOB4_ID_PK       JOBS4   P   JOB_ID      
HR   SYS_C007071   JOBS4   C   JOB_TITLE   "JOB_TITLE" IS NOT NULL   
*/

-- 제약조건 이름 변경
ALTER TABLE JOBS4
RENAME CONSTRAINT SYS_C007071 TO JOB4_TITLE_NN;
--==>> Table JOBS4이(가) 변경되었습니다.

-- 데이터 입력
INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('AD_PRES', 'President', 20080, 40000);
--==>> 1 행 이(가) 삽입되었습니다.
INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('AD_VP', 'Administration Vice President', 15000, 30000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('AD_ASST', 'Administration Assistant', 3000, 6000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('FI_MGR', 'Finance Manager', 8200, 16000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('FI_ACCOUNT', 'Accountant', 4200, 9000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('AC_MGR', 'Accounting Manager', 8200, 16000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('AC_ACCOUNT', 'Public Accountant', 4200, 9000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('SA_MAN', 'Sales Manager', 10000, 20080);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('SA_REP', 'Sales Representative', 6000, 12008);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('PU_MAN', 'Purchasing Manager', 8000, 15000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('PU_CLERK', 'Purchasing Clerk', 2500, 5500);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('ST_MAN', 'Stock Manager', 5500, 8500);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('ST_CLERK', 'Stock Clerk', 2008, 5000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('SH_CLERK', 'Shipping Clerk', 2500, 5500);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('IT_PROG', 'Programmer', 4000, 10000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('MK_MAN', 'Marketing Manager', 9000, 15000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('MK_REP', 'Marketing Representative', 4000, 9000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('HR_REP', 'Human Resources Representative', 4000, 9000);

INSERT INTO JOBS4(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES('PR_REP', 'Public Relations Representative', 4500, 10500);


SELECT *
FROM JOBS4;

SELECT * FROM dba_tables


-- [6] JOB_HISTORY-----------------------------------------------------------

DESC JOB_HISTORY;

SELECT *
FROM JOB_HISTORY;
/*
102   2001-01-13   2006-07-24   IT_PROG   60
101   1997-09-21   2001-10-27   AC_ACCOUNT   110
101   2001-10-28   2005-03-15   AC_MGR   110
201   2004-02-17   2007-12-19   MK_REP   20
114   2006-03-24   2007-12-31   ST_CLERK   50
122   2007-01-01   2007-12-31   ST_CLERK   50
200   1995-09-17   2001-06-17   AD_ASST   90
176   2006-03-24   2006-12-31   SA_REP   80
176   2007-01-01   2007-12-31   SA_MAN   80
200   2002-07-01   2006-12-31   AC_ACCOUNT   90
*/

--테이블 생성
CREATE TABLE JOB_HISTORY4
(EMPLOYEE_ID        NUMBER(6)      
,START_DATE         DATE
,END_DATE           DATE
,JOB_ID             VARCHAR2(10)    
,DEPARTMENT_ID      NUMBER(4)  
);



SELECT *
FROM JOB_HISTORY4;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOB_HISTORY';


--제약조건 추가 (외래키 제외)
ALTER TABLE JOB_HISTORY4
ADD ( CONSTRAINT JHIST4_EMPLOYEE_NN CHECK(EMPLOYEE_ID IS NOT NULL)
,CONSTRAINT JHIST4_START_DATE_NN CHECK(START_DATE IS NOT NULL)
,CONSTRAINT JHIST4_END_DATE_NN CHECK(END_DATE IS NOT NULL)
,CONSTRAINT JHIST4_JOB_NN CHECK(JOB_ID IS NOT NULL)
,CONSTRAINT JHIST4_DATE_INTERVAL CHECK(END_DATE > START_DATE)
,CONSTRAINT JHIST4_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID, START_DATE));


SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOB_HISTORY4';


--외래키 제약조건 추가 (EMPLOYEE 제외)
ALTER TABLE JOB_HISTORY4
ADD(CONSTRAINT JHIST4_JOB_FK FOREIGN KEY(JOB_ID)
            REFERENCES JOBS4(JOB_ID)
,CONSTRAINT JHIST4_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)
            REFERENCES DEPARTMENTS4(DEPARTMENT_ID));
            
            
--외래키 제약조건 추가
ALTER TABLE JOB_HISTORY4
ADD(CONSTRAINT JHIST4_EMP_FK FOREIGN KEY(EMPLOYEE_ID)
            REFERENCES EMPLOYEES4(EMPLOYEE_ID));





ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

--데이터 입력
INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (102,    '2001-01-13',   '2006-07-24', 'IT_PROG',   60);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (101, '1997-09-21',   '2001-10-27', 'AC_ACCOUNT', 110);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (101, '2001-10-28',   '2005-03-15', 'AC_MGR', 110);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (201, '2004-02-17',   '2007-12-19', 'MK_REP', 20);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (114, '2006-03-24',   '2007-12-31', 'ST_CLERK', 50);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (122, '2007-01-01',   '2007-12-31', 'ST_CLERK', 50);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (200,    '1995-09-17',   '2001-06-17', 'AD_ASST',   90);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (176, '2006-03-24',   '2006-12-31', 'SA_REP', 80);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (176, '2007-01-01',   '2007-12-31', 'SA_MAN', 80);

INSERT INTO JOB_HISTORY4 (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES (200, '2002-07-01', '2006-12-31',   'AC_ACCOUNT', 90);