SELECT *
  FROM EMP;
  
SELECT ROW_NUMBER() OVER(ORDER BY ENAME) "테스트"
     , ENAME "사원명", SAL "급여", HIREDATE "입사일"
  FROM EMP
 WHERE DEPTNO = 20
ORDER BY ENAME;
--==>>                          
/*
1	ADAMS	1100	1987-07-13
2	FORD	3000	1981-12-03
3	JONES	2975	1981-04-02
4	SCOTT	3000	1987-07-13
5	SMITH	 800	1980-12-17
*/


CREATE SEQUENCE SEO_BOARD    -- 기본적인 시퀀스 생성 구문
START WITH 1                 -- 시작값
INCREMENT BY 1               -- 증가값
NOMAXVALUE                   -- 최대값
NOCACHE;                     -- 캐시사용여부
--==>> Sequence SEQ_BOARD이(가) 생성되었습니다.

DROP SEQUENCE SEO_BOARD;

SELECT *
  FROM EMP, DEPT;
  
SELECT *
  FROM EMP, DEPT
 WHERE EMP.DEPTNO = DEPT.DEPTNO;

SELECT *
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO;


SELECT *
  FROM EMP E, SALGRADE S
 WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;

SELECT *
  FROM TBL_EMP;
--> 19명 사원 중 부서번호를 가지지 못한 사원들은 5

SELECT *
  FROM TBL_EMP E, TBL_DEPT D
 WHERE E.DEPTNO = D.DEPTNO;

SELECT *
  FROM TBL_EMP E, TBL_DEPT D
 WHERE E.DEPTNO = D.DEPTNO(+);
 
SELECT *
  FROM TBL_EMP E, TBL_DEPT D
 WHERE E.DEPTNO(+) = D.DEPTNO;

SELECT *
  FROM TBL_EMP E, TBL_DEPT D
 WHERE E.DEPTNO;
 

SELECT *
  FROM EMP CROSS JOIN DEPT;

--○ TBL_INSA 테이블의 급여 계산 전용 함수를 정의한다.
--   급여는 『(기본급*12)+수당』 기반으로 연산을 수행한다.
--   함수명 : FN_PAY(기본급, 수당)

CREATE OR REPLACE FUNCTION FN_PAY(VBASICPAY NUMBER, VSUDANG NUMBER)
RETURN NUMBER
IS
    
BEGIN
    RETURN NVL(VBASICPAY, 0) * 12 + NVL(VSUDANG, 0);
END;


SELECT *
  FROM TBL_INSA;

CREATE OR REPLACE FUNCTION FN_WORKYEAR(VIBSADATE NUMBER)
RETURN  NUMBER
IS
    VRESULT NUMBER;
BEGIN
    VRESULT = TRUNC((SYSDATE - VIBSADATE) / 365);
    
    RETURN VRESULT;
    
END;

SELECT MONTHS_BETWEEN(SYSDATE, '2002-02-11') / 12
  FROM DUAL;
  
CREATE OR REPLACE FUNCTION FN_WORKYEAR(VIBSADATE DATE)
RETURN VARCHAR2
IS
    VRESULT VARCHAR2(20);
BEGIN
    VRESULT := TRUNC(MONTHS_BETWEEN(SYSDATE, VIBSADATE) / 12) || '년'
               TRUNC(MOD(MONTHS_BETWEEN(SYSDATE, VIBSADATE), 12)) || '개월'
    RETURN VRESULT;
END;

CREATE OR REPLACE FUNCTION FN_WORKYEAR(VIBSADATE DATE)
RETURN NUMBER
IS
    VRESULT NUMBER;
BEGIN
    VRESULT := TRUNC(MONTHS_BETWEEN(SYSDATE, VIBSADATE) / 12, 1);
    
    RETURN VRESULT;
END;

CREATE OR REPLACE PROCEDURE PRC_STUDENT_INSERT
( V_ID          IN TBL_IDPW.ID%TYPE
, V_PW          IN TBL_IDPW.PW%TYPE
, V_NAME        IN TBL_STUDENTS.NAME%TYPE
, V_TEL         IN TBL_STUDENTS.TEL%TYPE
, V_ADDR        IN TBL_STUDENTS.ADDR%TYPE
)
IS
BEGIN
    INSERT INTO TBL_IDPW(ID, PW)
    VALUES(V_ID, V_PW);
    
    INS
END;








