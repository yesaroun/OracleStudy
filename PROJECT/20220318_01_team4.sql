SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE PRC_TEXTBOOK_UPDATE
( V_TEXTBOOK_CODE     IN TEXTBOOK.TEXTBOOK_CODE%TYPE
, V_TEXTBOOK_NAME     IN TEXTBOOK.TEXTBOOK_NAME%TYPE
, V_PUBLISHER         IN TEXTBOOK.PUBLISHER%TYPE
)
IS
    V_CHECK_PUBLISHER TEXTBOOK.PUBLISHER%TYPE;
BEGIN
    SELECT NVL(PUBLISHER, 'N') INTO V_CHECK_PUBLISHER
      FROM TEXTBOOK
     WHERE TEXTBOOK_CODE = V_TEXTBOOK_CODE;
     
    IF (V_CHECK_PUBLISHER = 'N')
        THEN UPDATE TEXTBOOK
                SET PUBLISHER = V_PUBLISHER
              WHERE TEXTBOOK_CODE = V_TEXTBOOK_CODE
                AND PUBLISHER IS NULL;
    ELSE
        UPDATE TEXTBOOK
           SET PUBLISHER = V_PUBLISHER
         WHERE TEXTBOOK_CODE = V_TEXTBOOK_CODE;            
    END IF;
    
    UPDATE TEXTBOOK
       SET TEXTBOOK_NAME = V_TEXTBOOK_NAME
     WHERE TEXTBOOK_CODE = V_TEXTBOOK_CODE;

END;

EXEC PRC_TEXTBOOK_UPDATE(1, '자바첫걸음', NULL);

CREATE OR REPLACE PROCEDURE PRC_TEXTBOOK_UPDATE
( V_TEXTBOOK_CODE     IN TEXTBOOK.TEXTBOOK_CODE%TYPE
, V_TEXTBOOK_NAME     IN TEXTBOOK.TEXTBOOK_NAME%TYPE
, V_PUBLISHER         IN TEXTBOOK.PUBLISHER%TYPE
)
IS
BEGIN
    
    UPDATE TEXTBOOK
       SET TEXTBOOK_NAME = V_TEXTBOOK_NAME
         , PUBLISHER = V_PUBLISHER
     WHERE TEXTBOOK_CODE = V_TEXTBOOK_CODE;

END;

SELECT *
  FROM TEXTBOOK;

CREATE OR REPLACE PROCEDURE PRC_CLASSROOM_DLETE
(V_CLASSROOM_CODE   IN CLASSROOM_REGISTER.CLASSROOM_CODE%TYPE
)
IS
BEGIN
    -- DELETE
    DELETE
      FROM CLASSROOM_REGISTER
     WHERE CLASSROOM_CODE = V_CLASSROOM_CODE;
END;

CREATE OR REPLACE PROCEDURE PRC_SUB_OPEN_UPDATE
( V_OP_SUB_CODE     IN SUBJECT_OPEN.OP_SUBJECT_CODE%TYPE
, V_SUB_CODE        IN SUBJECT_OPEN.SUBJECT_CODE%TYPE
, V_TB_CODE         IN SUBJECT_OPEN.TEXTBOOK_CODE%TYPE
, V_OP_COURSE_CODE  IN SUBJECT_OPEN.OP_COURSE_CODE%TYPE
, V_START_DAY       IN SUBJECT_OPEN.START_DATE%TYPE
, V_END_DAY         IN SUBJECT_OPEN.END_DATE%TYPE
)
IS
    
    USER_DEFINE_ERROR   EXCEPTION;
BEGIN
    UPDATE SUBJECT_OPEN
       SET SUBJECT_CODE = V_SUB_CODE, TEXTBOOK_CODE = V_TB_CODE
         , OP_COURSE_CODE = V_OP_COURSE_CODE
         , START_DATE = V_START_DAY, END_DATE = V_END_DAY
     WHERE OP_SUBJECT_CODE = V_OP_SUB_CODE;
    COMMIT;
END;

EXEC PRC_SUB_OPEN_UPDATE('C1S1', 1,2, 'C1', '2021-07-07', '2021-08-07');
--==>> C1S1	1	1	C1	2021-07-01	2021-08-31	30	40	30	2022-03-17
SELECT *
  FROM SUBJECT_OPEN;

CREATE OR REPLACE PROCEDURE PRC_COURSE_OPEN_UPDATE
( V_OP_COURSE_CODE     IN COURSE_OPEN.OP_COURSE_CODE%TYPE
, V_COURSE_CODE        IN COURSE_OPEN.COURSE_CODE%TYPE
, V_TEACHER_CODE         IN COURSE_OPEN.TEACHER_CODE%TYPE
, V_CLASSROOM_CODE  IN COURSE_OPEN.CLASSROOM_CODE%TYPE
, V_START_DATE       IN COURSE_OPEN.START_DATE%TYPE
, V_END_DATE         IN COURSE_OPEN.END_DATE%TYPE
, V_OPEN_DATE        IN COURSE_OPEN.OPEN_DATE%TYPE 
)
IS
BEGIN
    UPDATE COURSE_OPEN
       SET COURSE_CODE = V_COURSE_CODE, TEACHER_CODE = V_TEACHER_CODE
         , CLASSROOM_CODE = V_CLASSROOM_CODE
         , START_DATE = V_START_DATE, END_DATE = V_END_DATE
         , OPEN_DATE = V_OPEN_DATE
     WHERE OP_COURSE_CODE = V_OP_COURSE_CODE;
    COMMIT;
END;

----------------------------------------------------------------
-- 과정코드를 받으면 과정명을 반환하는 함수
CREATE OR REPLACE FUNCTION FN_COURSE(V_COURSE_CODE NUMBER)
RETURN VARCHAR2
IS
    V_COURSE_NAME   COURSE.COURSE_NAME%TYPE;
BEGIN
    SELECT COURSE_NAME INTO V_COURSE_NAME
      FROM COURSE
     WHERE COURSE_CODE = V_COURSE_CODE;
     
     RETURN V_COURSE_NAME;
END;

-- 교수코드를 받으면 교수명을 반환하는 함수
CREATE OR REPLACE FUNCTION FN_TEACHER_REGISTER(V_TEACHER_CODE VARCHAR2)
RETURN  VARCHAR2
IS
    V_NAME  TEACHER_REGISTER.NAME%TYPE;
BEGIN
    SELECT NAME INTO V_NAME
      FROM TEACHER_REGISTER
     WHERE TEACHER_CODE = V_TEACHER_CODE;
    
    RETURN V_NAME;
END;

-- 강의실 코드를 받으면 강의실명을 반환하는 함수
CREATE OR REPLACE FUNCTION FN_CLASSROOM_REGISTER(V_CLASSROOM_CODE NUMBER)
RETURN  VARCHAR2
IS
    V_CLASSROOM_NAME    CLASSROOM_REGISTER.CLASSROOM_NAME%TYPE;
BEGIN
    SELECT CLASSROOM_NAME INTO V_CLASSROOM_NAME
      FROM CLASSROOM_REGISTER
     WHERE CLASSROOM_CODE = V_CLASSROOM_CODE;
    
    RETURN V_CLASSROOM_NAME;
END;

-- 교재코드를 받으면 교재명을 반환하는 함수
CREATE OR REPLACE FUNCTION FN_TEXTBOOK(V_TEXTBOOK_CODE  NUMBER)
RETURN  VARCHAR2
IS
    V_TEXTBOOK_NAME     TEXTBOOK.TEXTBOOK_NAME%TYPE;
BEGIN
    SELECT TEXTBOOK_NAME INTO V_TEXTBOOK_NAME
      FROM TEXTBOOK
     WHERE TEXTBOOK_CODE = V_TEXTBOOK_CODE;
     
     RETURN V_TEXTBOOK_NAME;
END;

-- 과목코드를 받으면 과목명을 반환하는 함수
CREATE OR REPLACE FUNCTION FN_SUBJECT(V_SUBJECT_CODE NUMBER)
RETURN  VARCHAR2
IS
    V_SUBJECT_NAME  SUBJECT.SUBJECT_NAME%TYPE;
BEGIN
    SELECT SUBJECT_NAME INTO V_SUBJECT_NAME
      FROM SUBJECT
     WHERE SUBJECT_CODE = V_SUBJECT_CODE;
     
     RETURN V_SUBJECT_NAME;
END;

 --과정명, 강의실, 과목명, 기간, 교재명, 교수자명 출력쿼리
SELECT FN_COURSE(CO.COURSE_CODE) "과정명", FN_CLASSROOM_REGISTER(CO.CLASSROOM_CODE) "강의실"
     , FN_SUBJECT(SO.SUBJECT_CODE)"과목명"
     , CO.START_DATE "시작일자", CO.END_DATE "종료일자", CO.OPEN_DATE "개설일자"
     , FN_TEXTBOOK(SO.TEXTBOOK_CODE) "교재명"
     , FN_TEACHER_REGISTER(CO.TEACHER_CODE) "교수자명"
  FROM COURSE_OPEN CO JOIN SUBJECT_OPEN SO
    ON CO.OP_COURSE_CODE = SO.OP_COURSE_CODE;

SELECT *
  FROM COURSE_OPEN;

SELECT *
  FROM TEACHER_REGISTER;



