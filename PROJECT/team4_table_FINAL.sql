SELECT *
FROM USER_PROCEDURES;

--프로시저 삭제
SELECT 'DROP PROCEDURE ' || OBJECT_NAME || ';'
FROM USER_PROCEDURES
WHERE OBJECT_NAME LIKE 'PRC%';

DROP PROCEDURE PRC_CLASSROOM_DLETE;
DROP PROCEDURE PRC_COURSE_OPEN_UPDATE;
DROP PROCEDURE PRC_COURSE_UPDATE;
DROP PROCEDURE PRC_LOGIN;
DROP PROCEDURE PRC_OP_COU_TC_DELETE;
DROP PROCEDURE PRC_OP_COU_TEA_EDIT;
DROP PROCEDURE PRC_OP_COU_UPDATE;
DROP PROCEDURE PRC_STU_REG_MANEDIT;
DROP PROCEDURE PRC_STU_REG_STUEDIT;
DROP PROCEDURE PRC_SUB_MANEDIT;
DROP PROCEDURE PRC_SUB_OPEN_UPDATE;
DROP PROCEDURE PRC_TEXTBOOK_DELETE;
DROP PROCEDURE PRC_TEXTBOOK_UPDATE;

--함수 삭제
SELECT 'DROP FUNCTION ' || OBJECT_NAME || ';'
FROM USER_PROCEDURES
WHERE OBJECT_NAME LIKE 'FN%';

DROP FUNCTION FN_CLASSROOM_REGISTER;
DROP FUNCTION FN_COURSE;
DROP FUNCTION FN_COURSE_NAME;
DROP FUNCTION FN_ID_CHECK;
DROP FUNCTION FN_PW_CHECK;
DROP FUNCTION FN_SUBJECT;
DROP FUNCTION FN_TEACHER_REGISTER;
DROP FUNCTION FN_TEXTBOOK;

--트리거 삭제
SELECT 'DROP TRIGGER ' || OBJECT_NAME || ';'
FROM USER_PROCEDURES
WHERE OBJECT_NAME LIKE 'TRG%';

COMMIT;

SELECT USER
FROM DUAL;
--==>>TEAM4

--------------------------------------------------------------------------------

--○ 관리자등록 테이블 생성
CREATE TABLE MANAGER_REGISTER
( MANAGER_CODE   VARCHAR2(10)
, PASSWORD       VARCHAR2(30) CONSTRAINT MA_PASSWORD_NN NOT NULL
, REGISTER_DATE  DATE DEFAULT SYSDATE
, CONSTRAINT MA_CODE_PK PRIMARY KEY(MANAGER_CODE)
);

--------------------------------------------------------------------------------

--○ 교수등록 테이블 생성
CREATE TABLE TEACHER_REGISTER
( TEACHER_CODE    VARCHAR2(10)          --(교수코드)
, PASSWORD        VARCHAR2(30) CONSTRAINT TC_PASSWORD_NN NOT NULL         --(비밀번호)
, NAME            VARCHAR2(20) CONSTRAINT TC_NAME_NN NOT NULL          --(교수명)
, SSN             VARCHAR2(13) CONSTRAINT TC_SSN_NN NOT NULL          --(주민번호)
, REGISTER_DATE   DATE DEFAULT SYSDATE  --(가입일자)
, CONSTRAINT TC_CODE_PK PRIMARY KEY(TEACHER_CODE)
);

--------------------------------------------------------------------------------

--○ 학생 등록(STD) 테이블 생성
CREATE TABLE STUDENT_REGISTER
( STUDENT_CODE      VARCHAR2(10)         -- (학생코드)
, PASSWORD          VARCHAR2(30) CONSTRAINT STD_PASSWORD_NN NOT NULL           -- (비밀번호)
, NAME              VARCHAR2(20) CONSTRAINT STD_NAME_NN NOT NULL           -- (학생명)
, SSN               VARCHAR2(13) CONSTRAINT STD_SSN_NN NOT NULL           -- (주민번호)
, REGISTER_DATE     DATE DEFAULT SYSDATE -- (가입일자)
, CONSTRAINT STD_STD_CODE_PK PRIMARY KEY(STUDENT_CODE)
, CONSTRAINT STD_REG_DATE_NN CHECK(REGISTER_DATE IS NOT NULL)
, CONSTRAINT STD_SSN_UK UNIQUE(SSN)
);
--==>>Table STUDENT_REGISTER이(가) 생성되었습니다.

--------------------------------------------------------------------------------

--○ 과정(COU) 테이블 생성
CREATE TABLE COURSE
( COURSE_CODE    NUMBER           -- (과정코드)
, COURSE_NAME    VARCHAR2(20) CONSTRAINT COU_NAME_NN NOT NULL    -- (과정명)
, CONSTRAINT COU_CODE_PK PRIMARY KEY(COURSE_CODE)
);

--------------------------------------------------------------------------------

--○ 강의실등록 테이블 생성(REG_CLASS)
CREATE TABLE CLASSROOM_REGISTER
( CLASSROOM_CODE      NUMBER                                    -- 강의실코드
, CLASSROOM_NAME      VARCHAR2(20) CONSTRAINT REG_CLASS_NAME_NN NOT NULL                             -- 강의실명
, CLASSROOM_CAPACITY  NUMBER CONSTRAINT REG_CLASS_CAPA_NN NOT NULL                                   -- 수용인원
, CONSTRAINT REG_CLASS_CODE_PK PRIMARY KEY (CLASSROOM_CODE)
);         

--------------------------------------------------------------------------------

--○ 과정 개설(OP_COU) 테이블 생성
CREATE TABLE COURSE_OPEN
( OP_COURSE_CODE    VARCHAR2(10)         -- (과정개설코드)
, COURSE_CODE       NUMBER CONSTRAINT OP_COU_COU_CODE_NN NOT NULL               -- (과정코드)
, TEACHER_CODE      VARCHAR2(10)       -- (교수코드)
, CLASSROOM_CODE    NUMBER CONSTRAINT OP_COU_CLA_CODE_NN NOT NULL               -- (강의실코드)
, START_DATE        DATE CONSTRAINT OP_COU_STA_DATE_NN NOT NULL                 -- (시작일자)
, END_DATE          DATE CONSTRAINT OP_COU_END_DATE_NN NOT NULL                 -- (종료일자)
, OPEN_DATE         DATE DEFAULT SYSDATE -- (개설일자)
, CONSTRAINT OP_COU_OP_COU_CODE_PK PRIMARY KEY(OP_COURSE_CODE)
, CONSTRAINT OP_COU_COU_CODE_FK FOREIGN KEY(COURSE_CODE)
                                REFERENCES COURSE(COURSE_CODE)
, CONSTRAINT OP_COU_TEA_CODE_FK FOREIGN KEY(TEACHER_CODE)
                                REFERENCES TEACHER_REGISTER(TEACHER_CODE)
, CONSTRAINT OP_COU_CLA_CODE_FK FOREIGN KEY(CLASSROOM_CODE)
                                REFERENCES CLASSROOM_REGISTER(CLASSROOM_CODE)
);

--------------------------------------------------------------------------------

--○ 수강신청 테이블 생성(REG_COU)
CREATE TABLE COURSE_REGISTER
( REG_COURSE_CODE   VARCHAR2(10)   
, OP_COURSE_CODE    VARCHAR2(10) CONSTRAINT REG_COU_COU_CODE_NN NOT NULL     
, STUDENT_CODE      VARCHAR2(10) CONSTRAINT REG_COU_STD_CODE_NN NOT NULL     
, REG_COURSE_DATE   DATE DEFAULT SYSDATE
, CONSTRAINT REG_COU_CODE_PK PRIMARY KEY(REG_COURSE_CODE)
, CONSTRAINT REG_COU_COU_CODE_FK FOREIGN KEY(OP_COURSE_CODE)
                                 REFERENCES COURSE_OPEN(OP_COURSE_CODE)
, CONSTRAINT TEG_COU_STD_CODE_FK FOREIGN KEY(STUDENT_CODE)
                                 REFERENCES STUDENT_REGISTER(STUDENT_CODE)
);

--------------------------------------------------------------------------------

--○ 중도탈락사유코드 테이블 생성(DR_RE) 
CREATE TABLE DROP_REASON
( DR_REASON_CODE   NUMBER                                   -- 중도탈락사유코드
, DETAIL           VARCHAR2(30) CONSTRAINT DR_RE_DET_NN NOT NULL                             -- 중도탈락상세사유
, CONSTRAINT DR_RE_CODE_PK PRIMARY KEY(DR_REASON_CODE)
);

--------------------------------------------------------------------------------

--○ 중도탈락 테이블 생성(DR_STD)
CREATE TABLE STUDENT_DROP
( DROP_CODE         VARCHAR2(10)    
, REG_COURSE_CODE   VARCHAR2(10) CONSTRAINT DR_STD_COU_CODE_NN NOT NULL   
, DR_REASON_CODE    NUMBER
, DROP_DATE         DATE DEFAULT SYSDATE
, CONSTRAINT DR_STD_CODE_PK   PRIMARY KEY(DROP_CODE)
, CONSTRAINT DR_STD_COU_CODE_FK FOREIGN KEY(REG_COURSE_CODE)
                                REFERENCES COURSE_REGISTER(REG_COURSE_CODE)
, CONSTRAINT DR_STD_RE_CODE_FK FOREIGN KEY(DR_REASON_CODE)
                                REFERENCES DROP_REASON(DR_REASON_CODE)
);

--------------------------------------------------------------------------------

--○ 교재 테이블 생성
CREATE TABLE TEXTBOOK
( TEXTBOOK_CODE NUMBER
, TEXTBOOK_NAME VARCHAR2(20) CONSTRAINT TXT_NAME_NN NOT NULL
, PUBLISHER     VARCHAR2(30)
, CONSTRAINT TXT_CODE_PK PRIMARY KEY (TEXTBOOK_CODE)
);

--------------------------------------------------------------------------------

--○과목 테이블
CREATE TABLE SUBJECT
( SUBJECT_CODE NUMBER
, SUBJECT_NAME VARCHAR2(20) CONSTRAINT SUB_NAME_NN NOT NULL
, CONSTRAINT SUB_CODE_PK PRIMARY KEY (SUBJECT_CODE)
);

--------------------------------------------------------------------------------

--○ 과목개설(OP_SUB) 테이블 생성
CREATE TABLE SUBJECT_OPEN
( OP_SUBJECT_CODE   VARCHAR2(10)            -- (과목개설코드)
, SUBJECT_CODE      NUMBER CONSTRAINT OP_SUB_SUB_CODE_NN NOT NULL                 -- (과목코드)
, TEXTBOOK_CODE     NUMBER                  -- (교재코드) 
, OP_COURSE_CODE    VARCHAR2(10) CONSTRAINT OP_SUB_OP_COU_CODE_NN NOT NULL           -- (과정개설코드)
, START_DATE        DATE CONSTRAINT OP_SUB_STR_DATE_NN NOT NULL                   -- (시작일자)
, END_DATE          DATE CONSTRAINT OP_SUB_END_DATE_NN NOT NULL                   -- (종료일자)     
, ATTENDANCE_RATE   NUMBER                  -- (출결배점)
, WRITING_RATE      NUMBER                  -- (필기배점)   
, PERFORMANCE_RATE  NUMBER                  -- (실기배점) 
, OPEN_DATE         DATE DEFAULT SYSDATE    -- (개설일자) 
, CONSTRAINT OP_SUB_CODE_PK PRIMARY KEY(OP_SUBJECT_CODE)
, CONSTRAINT OP_SUB_SUB_CODE_FK FOREIGN KEY(SUBJECT_CODE)
                                REFERENCES SUBJECT(SUBJECT_CODE)
, CONSTRAINT OP_SUB_TXT_CODE_FK FOREIGN KEY(TEXTBOOK_CODE)
                                REFERENCES TEXTBOOK(TEXTBOOK_CODE)
, CONSTRAINT OP_SUB_OP_COU_CODE_FK FOREIGN KEY(OP_COURSE_CODE)
                                REFERENCES COURSE_OPEN(OP_COURSE_CODE)
);

--------------------------------------------------------------------------------



--○ 성적 입력 테이블
CREATE TABLE SCORE_INPUT
( SCORE_CODE        VARCHAR2(10)
, OP_SUBJECT_CODE   VARCHAR2(10) CONSTRAINT IN_SCR_OP_SUB_CODE_NN NOT NULL
, REG_COURSE_CODE   VARCHAR2(10) CONSTRAINT IN_SCR_REG_COU_CODE_NN NOT NULL
, ATTENDANCE_SCORE  NUMBER DEFAULT 0
, WRITING_SCORE     NUMBER DEFAULT 0
, PERFORMANCE_SCORE NUMBER DEFAULT 0
, SCORE_DATE        DATE DEFAULT SYSDATE
, CONSTRAINT IN_SCR_CODE_PK PRIMARY KEY (SCORE_CODE)
, CONSTRAINT IN_SCR_OP_SUB_CODE_FK FOREIGN KEY(OP_SUBJECT_CODE)         
                                   REFERENCES SUBJECT_OPEN(OP_SUBJECT_CODE)
, CONSTRAINT IN_SCR_REG_COU_CODE_FK FOREIGN KEY(REG_COURSE_CODE)    
                                   REFERENCES COURSE_REGISTER(REG_COURSE_CODE)
);

--------------------------------------------------------------------------------

--○ 제약조건 확인 전용 뷰(VIEW) 생성
--   (SYS 계정)GRANT CREATE VIEW TO TEAM4;
CREATE OR REPLACE VIEW VIEW_CONSTCHECK
AS
SELECT UC.OWNER "OWNER"
      ,UC.CONSTRAINT_NAME "CONSTRAINT_NAME"
      ,UC.TABLE_NAME"TABLE_NAME"
      ,UC.CONSTRAINT_TYPE"CONSTRAINT_TYPE"
      ,UCC.COLUMN_NAME"COLUMN_NAME"
      ,UC.SEARCH_CONDITION"SEARCH_CONDITION"
      ,UC.DELETE_RULE"DELETE_RULE"
FROM USER_CONSTRAINTS UC JOIN USER_CONS_COLUMNS UCC
ON UC.CONSTRAINT_NAME = UCC.CONSTRAINT_NAME;
--==>> View VIEW_CONSTCHECK이(가) 생성되었습니다.


SELECT USER
FROM DUAL;
--==>> TEAM4

--------------------------------------------------------------------------------
SELECT *
FROM MANAGER_REGISTER;
--①
--○ 관리자등록 테이블 데이터 입력
INSERT INTO MANAGER_REGISTER(MANAGER_CODE, PASSWORD)
VALUES ('M0001', '1234567');
INSERT INTO MANAGER_REGISTER(MANAGER_CODE, PASSWORD)
VALUES ('M0002', '8910');
--==>> 1 행 이(가) 삽입되었습니다. * 2
--------------------------------------------------------------------------------
SELECT *
FROM TEACHER_REGISTER;

--②
--○ 교수등록 테이블 데이터 입력
INSERT INTO TEACHER_REGISTER(TEACHER_CODE, PASSWORD, NAME, SSN)
VALUES ('T0001', '1234', '김교수', 9909091234567);
INSERT INTO TEACHER_REGISTER(TEACHER_CODE, PASSWORD, NAME, SSN)
VALUES ('T0002', '2345678', '박교수', 6501012345678);
--==>> 1 행 이(가) 삽입되었습니다. * 2
--------------------------------------------------------------------------------
SELECT *
FROM STUDENT_REGISTER;

--③
--○ 학생등록 테이블 데이터 입력
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0001', '1234', '김공일', 9203271234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0002', '1234', '김공이', 9505012234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0003', '1234', '김공삼', 9705031234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0004', '1234', '김공사', 9908012234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0005', '1234', '김공오', 9102031234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0006', '1234', '김공육', 9808182234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0007', '1234', '김공칠', 9909091234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0008', '1234', '김공팔', 9403042234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0009', '1234', '김공구', 9202011234567);
INSERT INTO STUDENT_REGISTER (STUDENT_CODE, PASSWORD, NAME, SSN)
VALUES ('S0010', '1234', '김공십', 9712242234567);
--==>> 1 행 이(가) 삽입되었습니다. * 10
--------------------------------------------------------------------------------
SELECT *
FROM COURSE;

--④
--○ 과정 테이블 데이터 입력
INSERT INTO COURSE (COURSE_CODE, COURSE_NAME)
VALUES (1, '자바만함');
--==>> 1 행 이(가) 삽입되었습니다.
--------------------------------------------------------------------------------
SELECT *
FROM CLASSROOM_REGISTER;

--⑤
--○ 강의실등록 테이블 데이터 입력
INSERT INTO CLASSROOM_REGISTER (CLASSROOM_CODE, CLASSROOM_NAME, 
CLASSROOM_CAPACITY)
VALUES (101, '101호', 10);
INSERT INTO CLASSROOM_REGISTER (CLASSROOM_CODE, CLASSROOM_NAME, 
CLASSROOM_CAPACITY)
VALUES (201, '201호', 20);
INSERT INTO CLASSROOM_REGISTER (CLASSROOM_CODE, CLASSROOM_NAME, 
CLASSROOM_CAPACITY)
VALUES (301, '301호', 30);
--==>> 1 행 이(가) 삽입되었습니다. * 3
--------------------------------------------------------------------------------
SELECT *
FROM COURSE_OPEN;
-- 해야함

--⑥
--○ 과정개설 테이블 데이터 입력
INSERT INTO COURSE_OPEN (OP_COURSE_CODE, COURSE_CODE, CLASSROOM_CODE, START_DATE, END_DATE)
VALUES ('C1', 1, 101, TO_DATE('2021-07-01', 'YYYY-MM-DD'), TO_DATE('2021-12-31', 'YYYY-MM-DD'));
INSERT INTO COURSE_OPEN (OP_COURSE_CODE, COURSE_CODE, CLASSROOM_CODE, START_DATE, END_DATE)
VALUES ('C2', 1, 201, TO_DATE('2021-09-01', 'YYYY-MM-DD'), TO_DATE('2022-03-01', 'YYYY-MM-DD'));
INSERT INTO COURSE_OPEN (OP_COURSE_CODE, COURSE_CODE, CLASSROOM_CODE, START_DATE, END_DATE)
VALUES ('C3', 1, 301, TO_DATE('2022-01-01', 'YYYY-MM-DD'), TO_DATE('2022-06-30', 'YYYY-MM-DD'));
--==>> 1 행 이(가) 삽입되었습니다. * 3
--------------------------------------------------------------------------------
SELECT *
FROM COURSE_REGISTER;
-- 해야함

--⑦
--○ 수강신청 테이블 데이터 입력                                                    
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC11', 'C1', 'S0001');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC12', 'C1', 'S0002');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC13', 'C1', 'S0003');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC21', 'C2', 'S0004');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC22', 'C2', 'S0005');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC23', 'C2', 'S0006');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC31', 'C3', 'S0007');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC32', 'C3', 'S0008');
INSERT INTO COURSE_REGISTER (REG_COURSE_CODE, OP_COURSE_CODE, STUDENT_CODE)
VALUES ('CRC33', 'C3', 'S0009');
--==>> 1 행 이(가) 삽입되었습니다. * 9
--------------------------------------------------------------------------------
SELECT *
FROM DROP_REASON;


--⑧
--○ 중도탈락사유 테이블 데이터 입력
INSERT INTO DROP_REASON (DR_REASON_CODE, DETAIL) 
VALUES (1, '출석률 미달');
--==>> 1 행 이(가) 삽입되었습니다.
--------------------------------------------------------------------------------
SELECT *
FROM STUDENT_DROP;


--⑨
--○ 중도탈락 테이블 데이터 입력
INSERT INTO STUDENT_DROP (DROP_CODE, REG_COURSE_CODE) 
VALUES ('D1', 'CRC32');
--==>> 1 행 이(가) 삽입되었습니다.
--------------------------------------------------------------------------------
SELECT *
FROM TEXTBOOK;

--⑩
--○ 교재 테이블 데이터 입력
INSERT INTO TEXTBOOK (TEXTBOOK_CODE, TEXTBOOK_NAME)
VALUES (1, '자바첫걸음');
INSERT INTO TEXTBOOK (TEXTBOOK_CODE, TEXTBOOK_NAME)
VALUES (2, '자바뛴다');
INSERT INTO TEXTBOOK (TEXTBOOK_CODE, TEXTBOOK_NAME)
VALUES (3, '자바난다요');
--==>> 1 행 이(가) 삽입되었습니다. * 3
--------------------------------------------------------------------------------
SELECT *
FROM SUBJECT;


--⑪
--○ 과목 테이블 데이터 입력
INSERT INTO SUBJECT (SUBJECT_CODE, SUBJECT_NAME)
VALUES (1, '자바초급');
INSERT INTO SUBJECT (SUBJECT_CODE, SUBJECT_NAME)
VALUES (2, '자바중급');
INSERT INTO SUBJECT (SUBJECT_CODE, SUBJECT_NAME)
VALUES (3, '자바고급');
--==>> 1 행 이(가) 삽입되었습니다. * 3

--------------------------------------------------------------------------------
SELECT *
FROM SUBJECT_OPEN;


--⑫ 
--○ 과목개설 테이블 데이터 입력
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC1', 1, 1, 'C1', TO_DATE('2021-07-01', 'YYYY-MM-DD')
       , TO_DATE('2021-08-31', 'YYYY-MM-DD'), 30, 40, 30);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC2', 2, 2, 'C1', TO_DATE('2021-09-01', 'YYYY-MM-DD')
       , TO_DATE('2021-10-31', 'YYYY-MM-DD'), 20, 30, 50);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC3', 3, 3, 'C1', TO_DATE('2021-11-01', 'YYYY-MM-DD')
       , TO_DATE('2021-12-30', 'YYYY-MM-DD'), 70, 10, 20);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC4', 1, 1, 'C2', TO_DATE('2021-09-01', 'YYYY-MM-DD')
       , TO_DATE('2021-09-30', 'YYYY-MM-DD'), 30, 40, 30);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC5', 2, 2, 'C2', TO_DATE('2021-10-01', 'YYYY-MM-DD')
       , TO_DATE('2021-11-30', 'YYYY-MM-DD'), 20, 30, 50);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC6', 3, 3, 'C2', TO_DATE('2021-12-01', 'YYYY-MM-DD')
       , TO_DATE('2022-02-28', 'YYYY-MM-DD'), 70, 10, 20);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC7', 1, 1, 'C3', TO_DATE('2022-01-01', 'YYYY-MM-DD')
       , TO_DATE('2022-02-28', 'YYYY-MM-DD'), 30, 40, 30);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC8', 2, 2, 'C3', TO_DATE('2022-03-01', 'YYYY-MM-DD')
       , TO_DATE('2022-04-30', 'YYYY-MM-DD'), 20, 30, 50);
INSERT INTO SUBJECT_OPEN (OP_SUBJECT_CODE, SUBJECT_CODE, TEXTBOOK_CODE, 
OP_COURSE_CODE, START_DATE, END_DATE, ATTENDANCE_RATE, WRITING_RATE, PERFORMANCE_RATE)
VALUES ('OSC9', 3, 3, 'C3', TO_DATE('2022-05-01', 'YYYY-MM-DD')
       , TO_DATE('2022-06-30', 'YYYY-MM-DD'), 70, 10, 20);
--==>> 1 행 이(가) 삽입되었습니다. * 9       
--------------------------------------------------------------------------------
SELECT *
FROM SCORE_INPUT;


--⑬
--○ 성적입력 테이블 데이터 입력
--   C1 세부과목 세 학생 정보
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC1_1', 'OSC1', 'CRC11', 70, 60, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC1_2', 'OSC1', 'CRC12', 20, 80, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC1_3', 'OSC1', 'CRC13', 90, 80, 90);

INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC2_1', 'OSC2', 'CRC11', 20, 50, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC2_2', 'OSC2', 'CRC12', 50, 80, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC2_3', 'OSC2', 'CRC13', 60, 80, 90);

INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC3_1', 'OSC3', 'CRC11', 70, 40, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC3_2', 'OSC3', 'CRC12', 20, 20, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC3_3', 'OSC3', 'CRC13', 90, 30, 90);

-- C2 세부과목 세 학생 세부 정보
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC4_1', 'OSC4', 'CRC21', 70, 60, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC4_2', 'OSC4', 'CRC22', 20, 80, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC4_3', 'OSC4', 'CRC23', 90, 80, 90);

INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC5_1', 'OSC5', 'CRC21', 20, 50, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC5_2', 'OSC5', 'CRC22', 50, 80, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC5_3', 'OSC5', 'CRC23', 60, 80, 90);

INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC6_1', 'OSC6', 'CRC21', 70, 40, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC6_2', 'OSC6', 'CRC22', 20, 20, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC6_3', 'OSC6', 'CRC23', 90, 30, 90);

-- C3 세부과목 C3S1. 세 학생 세부 정보
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC7_1', 'OSC7', 'CRC31', 70, 60, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC7_2', 'OSC7', 'CRC32', 20, 80, 50);
INSERT INTO SCORE_INPUT (SCORE_CODE, OP_SUBJECT_CODE, REG_COURSE_CODE, 
ATTENDANCE_SCORE, WRITING_SCORE, PERFORMANCE_SCORE)
VALUES ('OSC7_3', 'OSC7', 'CRC33', 90, 80, 90);
--==>> 1 행 이(가) 삽입되었습니다. * 21
--------------------------------------------------------------------------------

--테이블 데이터 확인
SELECT TABLE_NAME
FROM USER_TABLES;
--==>>
/*
MANAGER_REGISTER
TEACHER_REGISTER
STUDENT_REGISTER
COURSE
CLASSROOM_REGISTER
COURSE_OPEN
COURSE_REGISTER
DROP_REASON
STUDENT_DROP
TEXTBOOK
SUBJECT
SUBJECT_OPEN
SCORE_INPUT                   
*/

